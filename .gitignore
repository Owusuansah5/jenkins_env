# Local .terraform directories
**/.terraform/*
<<<<<<< HEAD

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log
=======
*.pem
# .tfstate files
*.tfstate
*.tfstate.*
*local_initial_jenkins_pwd.txt
# Crash log files
crash.log
crash.*.log
*initial_jenkins_pwd.txt
*vaultkey.txt

>>>>>>> 6dc7c42 (Jenkins environment set up)

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
<<<<<<< HEAD
*.tfvars
=======
#*.tfvars
>>>>>>> 6dc7c42 (Jenkins environment set up)
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

<<<<<<< HEAD
# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

=======
>>>>>>> 6dc7c42 (Jenkins environment set up)
# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
